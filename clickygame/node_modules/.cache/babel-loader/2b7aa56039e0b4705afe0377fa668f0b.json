{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TitleBarTitle = exports.MenuIcon = exports.TitleBar = exports.ResponsiveNavigation = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _topBar = require('./top-bar');\n\nvar _utils = require('../utils');\n\nvar _ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar _ExecutionEnvironment2 = _interopRequireDefault(_ExecutionEnvironment);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // Default pixel value when title bar is displayed and top bar is hidden.\n\n\nvar DEFAULT_BREAKPOINT = 640;\n/**\n * Responsive navigation component.\n * http://foundation.zurb.com/sites/docs/responsive-navigation.html\n */\n\nvar ResponsiveNavigation = exports.ResponsiveNavigation = function (_Component) {\n  _inherits(ResponsiveNavigation, _Component);\n\n  function ResponsiveNavigation() {\n    _classCallCheck(this, ResponsiveNavigation);\n\n    var _this = _possibleConstructorReturn(this, (ResponsiveNavigation.__proto__ || Object.getPrototypeOf(ResponsiveNavigation)).call(this));\n\n    _this.state = {\n      isTitleBarVisible: true,\n      isTopBarVisible: false\n    };\n    _this.update = _this.update.bind(_this);\n    _this.toggle = _this.toggle.bind(_this);\n    return _this;\n  }\n\n  _createClass(ResponsiveNavigation, [{\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      this.update();\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (_ExecutionEnvironment2.default.canUseDOM) {\n        window.addEventListener('resize', this.update);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      if (_ExecutionEnvironment2.default.canUseDOM) {\n        window.removeEventListener('resize', this.update);\n      }\n    }\n    /**\n     * Updates the state of this component.\n     * While this might seem like a sub-optimal solution, it is actually the only solution.\n     * Using 'hide' and 'show' -classes won't work because they set display with `!important`.\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      var breakpoint = this.props.breakpoint;\n\n      if (_ExecutionEnvironment2.default.canUseDOM) {\n        this.setState({\n          isTitleBarVisible: window.innerWidth < breakpoint,\n          isTopBarVisible: window.innerWidth >= breakpoint\n        });\n      }\n    }\n    /**\n     * Called when the menu icon is clicked.\n     */\n\n  }, {\n    key: 'toggle',\n    value: function toggle() {\n      this.setState({\n        isTopBarVisible: !this.state.isTopBarVisible\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _state = this.state,\n          isTitleBarVisible = _state.isTitleBarVisible,\n          isTopBarVisible = _state.isTopBarVisible;\n      var _props = this.props,\n          _props$titleBar = _props.titleBar,\n          titleBarProps = _props$titleBar === undefined ? {} : _props$titleBar,\n          _props$menuIcon = _props.menuIcon,\n          menuIconProps = _props$menuIcon === undefined ? {} : _props$menuIcon,\n          _props$titleBarTitle = _props.titleBarTitle,\n          titleBarTitleProps = _props$titleBarTitle === undefined ? {} : _props$titleBarTitle,\n          _props$topBar = _props.topBar,\n          topBarProps = _props$topBar === undefined ? {} : _props$topBar,\n          children = _props.children;\n      return _react2.default.createElement('div', (0, _utils.removeProps)(this.props, ['breakpoint']), _react2.default.createElement(TitleBar, _extends({}, titleBarProps, {\n        isHidden: !isTitleBarVisible\n      }), _react2.default.createElement(MenuIcon, _extends({}, menuIconProps, {\n        onClick: this.toggle\n      })), _react2.default.createElement(TitleBarTitle, titleBarTitleProps)), _react2.default.createElement(_topBar.TopBar, _extends({}, topBarProps, {\n        isHidden: !isTopBarVisible\n      }), children));\n    }\n  }]);\n\n  return ResponsiveNavigation;\n}(_react.Component);\n\nResponsiveNavigation.propTypes = _extends({}, _utils.GeneralPropTypes, _utils.FlexboxPropTypes, {\n  breakpoint: _propTypes2.default.number.isRequired\n});\nResponsiveNavigation.defaultProps = {\n  breakpoint: DEFAULT_BREAKPOINT\n};\n/**\n * Title bar sub-component.\n *\n * @param {Object} props\n * @returns {Object}\n */\n\nvar TitleBar = exports.TitleBar = function TitleBar(props) {\n  var className = (0, _utils.createClassName)(props.noDefaultClassName ? null : 'title-bar', props.className, (0, _utils.generalClassNames)(props));\n  var passProps = (0, _utils.removeProps)(props, (0, _utils.objectKeys)(TitleBar.propTypes));\n  return _react2.default.createElement('div', _extends({}, passProps, {\n    className: className\n  }));\n};\n\nTitleBar.propTypes = _extends({}, _utils.GeneralPropTypes, _utils.FlexboxPropTypes);\n/**\n * Title bar menu icon sub-component.\n *\n * @param {Object} props\n * @returns {Object}\n */\n\nvar MenuIcon = exports.MenuIcon = function MenuIcon(props) {\n  var className = (0, _utils.createClassName)(props.noDefaultClassName ? null : 'menu-icon', props.className, (0, _utils.generalClassNames)(props));\n  var passProps = (0, _utils.removeProps)(props, (0, _utils.objectKeys)(MenuIcon.propTypes));\n  return _react2.default.createElement('button', _extends({}, passProps, {\n    className: className,\n    type: 'button'\n  }));\n};\n\nMenuIcon.propTypes = _extends({}, _utils.GeneralPropTypes, _utils.FlexboxPropTypes);\n/**\n * Title bar title sub-component.\n *\n * @param {Object} props\n * @returns {Object}\n */\n\nvar TitleBarTitle = exports.TitleBarTitle = function TitleBarTitle(props) {\n  var className = (0, _utils.createClassName)(props.noDefaultClassName ? null : 'title-bar-title', props.className, (0, _utils.generalClassNames)(props));\n  var passProps = (0, _utils.removeProps)(props, (0, _utils.objectKeys)(TitleBarTitle.propTypes));\n  return _react2.default.createElement('div', _extends({}, passProps, {\n    className: className\n  }));\n};\n\nTitleBarTitle.propTypes = _extends({}, _utils.GeneralPropTypes, _utils.FlexboxPropTypes);","map":null,"metadata":{},"sourceType":"script"}