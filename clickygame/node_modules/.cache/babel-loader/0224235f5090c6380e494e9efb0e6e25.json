{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Cell = exports.Grid = exports.GridContainer = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _enums = require('../enums');\n\nvar _utils = require('../utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Grid container component.\n *\n * @param {Object} props\n * @returns {Object}\n */\n\n\nvar GridContainer = exports.GridContainer = function GridContainer(props) {\n  var className = (0, _utils.createClassName)(props.noDefaultClassName ? null : 'grid-container', props.className, {\n    'fluid': props.fluid,\n    'full': props.full\n  }, (0, _utils.generalClassNames)(props), (0, _utils.flexboxClassNames)(props));\n  var passProps = (0, _utils.removeProps)(props, (0, _utils.objectKeys)(GridContainer.propTypes));\n  return _react2.default.createElement('div', _extends({}, passProps, {\n    className: className\n  }));\n};\n\nGridContainer.propTypes = _extends({}, _utils.GeneralPropTypes, _utils.FlexboxPropTypes, {\n  fluid: _propTypes2.default.bool,\n  full: _propTypes2.default.bool\n});\n/**\n * Grid component.\n *\n * @param {Object} props\n * @returns {Object}\n */\n\nvar Grid = exports.Grid = function Grid(props) {\n  var className = (0, _utils.createClassName)(props.noDefaultClassName ? null : (0, _utils.setDirection)(props.vertical), props.className, (0, _utils.isDefined)(props.gutters) ? (0, _utils.setDirection)(props.vertical, props.gutters) : null, (0, _utils.isDefined)(props.upOnSmall) ? 'small-up-' + props.upOnSmall : null, (0, _utils.isDefined)(props.upOnMedium) ? 'medium-up-' + props.upOnMedium : null, (0, _utils.isDefined)(props.upOnLarge) ? 'large-up-' + props.upOnLarge : null, (0, _utils.isDefined)(props.collapseOnSmall) ? 'small-' + props.collapseOnSmall + '-collapse' : null, (0, _utils.isDefined)(props.collapseOnMedium) ? 'medium-' + props.collapseOnMedium + '-collapse' : null, (0, _utils.isDefined)(props.collapseOnLarge) ? 'large-' + props.collapseOnLarge + '-collapse' : null, (0, _utils.isDefined)(props.gridFrame) ? (0, _utils.addBreakpoint)('grid-frame', props.gridFrame) : null, (0, _utils.generalClassNames)(props), (0, _utils.flexboxClassNames)(props));\n  var passProps = (0, _utils.removeProps)(props, (0, _utils.objectKeys)(Grid.propTypes));\n  return _react2.default.createElement('div', _extends({}, passProps, {\n    className: className\n  }));\n};\n\nGrid.propTypes = _extends({}, _utils.GeneralPropTypes, _utils.FlexboxPropTypes, {\n  vertical: _propTypes2.default.bool,\n  gutters: _propTypes2.default.oneOf((0, _utils.objectValues)(_enums.GutterTypes)),\n  upOnSmall: _propTypes2.default.number,\n  upOnMedium: _propTypes2.default.number,\n  upOnLarge: _propTypes2.default.number,\n  collapseOnSmall: _propTypes2.default.oneOf((0, _utils.objectValues)(_enums.GutterTypes)),\n  collapseOnMedium: _propTypes2.default.oneOf((0, _utils.objectValues)(_enums.GutterTypes)),\n  collapseOnLarge: _propTypes2.default.oneOf((0, _utils.objectValues)(_enums.GutterTypes)),\n  gridFrame: _propTypes2.default.oneOf((0, _utils.objectValues)(_enums.ExtendedBreakpoints))\n});\n/**\n * Cell component.\n *\n * @param {Object} props\n * @returns {Object}\n */\n\nvar Cell = exports.Cell = function Cell(props) {\n  var className = (0, _utils.createClassName)(props.noDefaultClassName ? null : 'cell', props.className, props.small ? 'small-' + props.small : null, props.medium ? 'medium-' + props.medium : null, props.large ? 'large-' + props.large : null, (0, _utils.isDefined)(props.auto) ? (0, _utils.addBreakpoint)('auto', props.auto) : null, (0, _utils.isDefined)(props.shrink) ? (0, _utils.addBreakpoint)('shrink', props.shrink) : null, (0, _utils.isDefined)(props.offsetOnSmall) ? 'small-offset-' + props.offsetOnSmall : null, (0, _utils.isDefined)(props.offsetOnMedium) ? 'medium-offset-' + props.offsetOnMedium : null, (0, _utils.isDefined)(props.offsetOnLarge) ? 'large-offset-' + props.offsetOnLarge : null, (0, _utils.generalClassNames)(props), (0, _utils.flexboxClassNames)(props));\n  var passProps = (0, _utils.removeProps)(props, (0, _utils.objectKeys)(Cell.propTypes));\n  return _react2.default.createElement('div', _extends({}, passProps, {\n    className: className\n  }));\n};\n\nCell.propTypes = _extends({}, _utils.GeneralPropTypes, _utils.FlexboxPropTypes, {\n  small: _propTypes2.default.number,\n  medium: _propTypes2.default.number,\n  large: _propTypes2.default.number,\n  auto: _propTypes2.default.oneOf((0, _utils.objectValues)(_enums.ExtendedBreakpoints)),\n  shrink: _propTypes2.default.oneOf((0, _utils.objectValues)(_enums.ExtendedBreakpoints)),\n  offsetOnSmall: _propTypes2.default.number,\n  offsetOnMedium: _propTypes2.default.number,\n  offsetOnLarge: _propTypes2.default.number\n});","map":null,"metadata":{},"sourceType":"script"}