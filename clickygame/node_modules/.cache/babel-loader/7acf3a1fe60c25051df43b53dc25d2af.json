{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MenuText = exports.MenuItem = exports.Menu = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _enums = require('../enums');\n\nvar _utils = require('../utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Menu component.\n * http://foundation.zurb.com/sites/docs/menu.html\n *\n * @param {Object} props\n * @returns {Object}\n */\n\n\nvar Menu = exports.Menu = function Menu(props) {\n  var className = (0, _utils.createClassName)(props.noDefaultClassName ? null : 'menu', props.className, {\n    'align-right': props.alignment === _enums.MenuAlignments.RIGHT,\n    'align-center': props.alignment === _enums.MenuAlignments.CENTER,\n    'icon-top': props.iconsOnTop,\n    'expanded': props.isExpanded,\n    'vertical': props.isVertical,\n    'simple': props.isSimple,\n    'nested': props.isNested,\n    'dropdown': props.isDropdown,\n    'medium-horizontal': props.horizontalOnMedium\n  }, (0, _utils.generalClassNames)(props));\n  var passProps = (0, _utils.removeProps)(props, (0, _utils.objectKeys)(Menu.propTypes));\n  return _react2.default.createElement('ul', _extends({}, passProps, {\n    className: className\n  }));\n};\n\nMenu.propTypes = _extends({}, _utils.GeneralPropTypes, _utils.FlexboxPropTypes, {\n  alignment: _propTypes2.default.oneOf((0, _utils.objectValues)(_enums.MenuAlignments)),\n  iconsOnTop: _propTypes2.default.bool,\n  isExpanded: _propTypes2.default.bool,\n  isVertical: _propTypes2.default.bool,\n  isDropdown: _propTypes2.default.bool,\n  isSimple: _propTypes2.default.bool,\n  isNested: _propTypes2.default.bool,\n  horizontalOnMedium: _propTypes2.default.bool\n});\n/**\n * Menu item component.\n *\n * @param {Object} props\n * @returns {Object}\n */\n\nvar MenuItem = exports.MenuItem = function MenuItem(props) {\n  var className = (0, _utils.createClassName)(props.className, {\n    'active': props.isActive\n  }, (0, _utils.generalClassNames)(props));\n  var passProps = (0, _utils.removeProps)(props, (0, _utils.objectKeys)(MenuItem.propTypes));\n  return _react2.default.createElement('li', _extends({}, passProps, {\n    className: className\n  }));\n};\n\nMenuItem.propTypes = _extends({}, _utils.GeneralPropTypes, _utils.FlexboxPropTypes, {\n  isActive: _propTypes2.default.bool\n});\n/**\n * Menu text wrapper-component.\n *\n * @param {Object} props\n * @returns {XML}\n */\n\nvar MenuText = exports.MenuText = function MenuText(props) {\n  return _react2.default.createElement(MenuItem, _extends({}, props, {\n    className: props.className || 'menu-text'\n  }));\n};","map":null,"metadata":{},"sourceType":"script"}