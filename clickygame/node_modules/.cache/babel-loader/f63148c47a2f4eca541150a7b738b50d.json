{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Link = exports.Button = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _enums = require('../enums');\n\nvar _utils = require('../utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Button property types.\n *\n * @type {Object}\n */\n\n\nvar ButtonPropTypes = _extends({}, _utils.GeneralPropTypes, _utils.FlexboxPropTypes, {\n  color: _propTypes2.default.oneOf((0, _utils.objectValues)(_enums.ButtonColors)),\n  size: _propTypes2.default.oneOf((0, _utils.objectValues)(_enums.ButtonSizes)),\n  isHollow: _propTypes2.default.bool,\n  isClear: _propTypes2.default.bool,\n  isExpanded: _propTypes2.default.bool,\n  isDisabled: _propTypes2.default.bool,\n  isDropdown: _propTypes2.default.bool\n});\n/**\n * Button component.\n * http://foundation.zurb.com/sites/docs/button.html\n *\n * @param {Object} props\n * @returns {Object}\n */\n\n\nvar Button = exports.Button = function Button(props) {\n  var passProps = (0, _utils.removeProps)(props, (0, _utils.objectKeys)(Button.propTypes));\n  return _react2.default.createElement('button', _extends({}, passProps, {\n    className: createButtonClassName(props)\n  }));\n};\n\nButton.propTypes = ButtonPropTypes;\n/**\n * Link button component.\n * http://foundation.zurb.com/sites/docs/button.html#basics\n *\n * @param {Object} props\n * @returns {Object}\n */\n\nvar Link = exports.Link = function Link(props) {\n  var passProps = (0, _utils.removeProps)(props, (0, _utils.objectKeys)(Button.propTypes));\n  return _react2.default.createElement('a', _extends({}, passProps, {\n    className: createButtonClassName(props)\n  }));\n};\n\nLink.propTypes = ButtonPropTypes;\n/**\n * Creates button class name from the given properties.\n *\n * @param {Object} props\n * @returns {string}\n */\n\nfunction createButtonClassName(props) {\n  return (0, _utils.createClassName)(props.noDefaultClassName ? null : 'button', props.className, props.size, props.color, {\n    'hollow': props.isHollow,\n    'clear': props.isClear,\n    'expanded': props.isExpanded,\n    'disabled': props.isDisabled,\n    'dropdown': props.isDropdown,\n    'arrow-only': props.isArrowOnly\n  }, (0, _utils.generalClassNames)(props));\n}","map":null,"metadata":{},"sourceType":"script"}